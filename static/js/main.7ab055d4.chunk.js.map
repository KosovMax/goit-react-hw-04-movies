{"version":3,"sources":["services/api-movies.js","views/Cast/Cast.js","views/Reviews/Reviews.js","views/NotFound/NotFound.js","views/index.js","components/MovieItems/MovieItems.js","components/SearchFrom/SearchFrom.js","views/MoviesPage/MoviesPage.js","views/MovieDetailsPage/MovieDetailsPage.js","views/HomePage/HomePage.js","routes/index.js","components/Navigation/Navigation.js","components/AppBar/AppBar.js","components/Loader/Loader.js","App.js","index.js"],"names":["API_KEY","getTrending","mediaType","timeWindow","axios","get","then","res","data","results","getMovie","movieId","getMovieCast","cast","getMovieReviews","searchMovie","query","Cast","state","casts","componentDidMount","props","match","params","setState","this","console","log","style","width","map","id","name","profile_path","character","src","alt","Component","Reviews","reviews","author","content","NotFound","HomePage","MoviesPage","MovieDetailsPage","MovieItems","location","className","title","poster_path","to","pathname","from","defaultProps","withRouter","SearchFrom","type","updateSearchMovie","queryString","parse","search","onSearch","updateSearch","length","overview","genres","vote_average","release_date","handleGoBack","history","push","routes","home","year","split","url","onClick","borderTop","borderBottom","path","movieCast","component","movieReviews","movies","movieDetails","Navigation","exact","activeClassName","AppBar","Loader","lazy","App","fallback","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7ab055d4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst API_KEY = '3ac108b4a8c39f97e15d9c6a4800e731';\r\n\r\nconst getTrending = ({mediaType=\"all\", timeWindow=\"week\"}) =>{\r\n\r\n    // media_type = all, movie, tv, person\r\n    // time_window = day, week\r\n\r\n    return axios.get(`https://api.themoviedb.org/3/trending/${mediaType}/${timeWindow}?api_key=${API_KEY}`)\r\n            .then(res => res.data.results);\r\n}\r\n\r\nconst getMovie = movieId =>{\r\n\r\n    return axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`)\r\n            .then(res => res.data);\r\n}\r\n\r\nconst getMovieCast = movieId =>{\r\n\r\n    return axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`)\r\n            .then(res => res.data.cast);\r\n}\r\n\r\nconst getMovieReviews = movieId =>{\r\n\r\n    return axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\r\n            .then(res => res.data.results);\r\n}\r\n\r\nconst searchMovie = query =>{\r\n\r\n    return axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}`)\r\n            .then(res => res.data.results);\r\n}\r\n\r\n\r\n\r\nexport {\r\n    getTrending,\r\n    getMovie,\r\n    getMovieCast,\r\n    getMovieReviews,\r\n    searchMovie\r\n}\r\n\r\nexport default { \r\n    getTrending,\r\n    getMovie,\r\n    getMovieCast,\r\n    getMovieReviews,\r\n    searchMovie\r\n}","import { Component } from \"react\"\r\nimport { getMovieCast } from './../../services/api-movies'\r\n\r\nexport default class Cast extends Component{\r\n\r\n    state = {\r\n        casts:[]\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { movieId } = this.props.match.params;\r\n\r\n        getMovieCast(movieId)\r\n            .then(casts => {\r\n                // console.log(res)\r\n                this.setState({casts})\r\n            })\r\n    }\r\n\r\n\r\n    render(){\r\n        const { casts } = this.state;\r\n        console.log(casts)\r\n\r\n        return (\r\n            <ul style={{ width: \"max-content\"}}>\r\n                {casts.map(({id, name, profile_path, character})=>(\r\n                    <li key={id}>\r\n\r\n                        {profile_path && <img src={`https://image.tmdb.org/t/p/w138_and_h175_face/${profile_path}`} alt={name}/>}\r\n                        <div>{name}</div>\r\n                        <div>Character: {character}</div>\r\n                        <hr/>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n}","import { Component } from \"react\"\r\nimport { getMovieReviews } from './../../services/api-movies'\r\n\r\nexport default class Reviews extends Component{\r\n\r\n    state = {\r\n        reviews:[]\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        const { movieId } = this.props.match.params;\r\n\r\n        getMovieReviews(movieId)\r\n        .then(reviews => {\r\n            this.setState({reviews});\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {reviews} = this.state;\r\n        return (\r\n            <ul>\r\n                {reviews.map(({id, author, content})=>(\r\n                    <li key={id}>\r\n                        <h5> Author: {author}</h5>\r\n                        <p>{content}</p>\r\n                        <hr/>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n}","\r\n\r\nexport default function NotFound(){\r\n    return (\r\n        <h1>404 - page not found</h1>\r\n    )\r\n}","import HomePage from './HomePage';\r\nimport MoviesPage from './MoviesPage';\r\nimport MovieDetailsPage from './MovieDetailsPage';\r\nimport Cast from './Cast';\r\nimport Reviews from './Reviews';\r\nimport NotFound from './NotFound';\r\n\r\nexport {\r\n    HomePage,\r\n    MoviesPage,\r\n    MovieDetailsPage,\r\n    Cast,\r\n    Reviews,\r\n    NotFound\r\n}\r\n\r\nexport default{\r\n    HomePage,\r\n    MoviesPage,\r\n    MovieDetailsPage,\r\n    Cast,\r\n    Reviews,\r\n    NotFound\r\n}","import PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport routes from './../../routes';\r\n\r\nconst MovieItems = ({results, location}) => {\r\n\r\n    // const url = match.url === '/' ? routes.movies : match.url\r\n\r\n    return (\r\n        <ul className=\"movieItems\">\r\n            {results.map(({id, title, name, poster_path}) => (\r\n                <li key={id}>\r\n                    <Link to={{\r\n                        pathname:`/movies/${id}`,\r\n                        state:{from:location}\r\n                    }}>\r\n                        {poster_path != null ? \r\n                            <img src={`//image.tmdb.org/t/p/w220_and_h330_face/${poster_path}`} alt={title ? title : name} />\r\n                            : <img src={`https://dummyimage.com/220x330/2a2a2a/ffffff&text=No+image`} alt=\"No image\" />\r\n                        }\r\n                        <h4>{title ? title : name}</h4>\r\n                    </Link>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nMovieItems.defaultProps = {\r\n    MovieItems:[]\r\n}\r\n\r\nMovieItems.propTypes = {\r\n    MovieItems:PropTypes.array.isRequired\r\n}\r\n\r\nexport default withRouter(MovieItems);","\r\n\r\nexport default function SearchFrom(){\r\n    return(\r\n        <form >\r\n            <input type=\"text\" name=\"query\" />\r\n            <button type=\"submit\">search</button>\r\n        </form>\r\n    )\r\n}","import { Component } from 'react';\r\nimport queryString from 'query-string';\r\nimport SearchFrom from './../../components/SearchFrom';\r\nimport MovieItems from './../../components/MovieItems';\r\n\r\nimport { searchMovie } from './../../services/api-movies'\r\n\r\nexport default class MoviesPage extends Component{\r\n\r\n    state = {\r\n        results:[]\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        this.updateSearchMovie();\r\n    }\r\n\r\n    updateSearchMovie = () =>{\r\n        const { query } = queryString.parse(this.props.location.search);\r\n\r\n        if(query)\r\n            searchMovie(query)\r\n            .then(results => {\r\n                this.setState({results})\r\n            })\r\n    }\r\n\r\n    render(){\r\n\r\n        const { results } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <br/>\r\n                <SearchFrom onSearch={this.updateSearch} />\r\n\r\n                { results.length >= 0 && <MovieItems results={results} />}\r\n            </>\r\n        )\r\n    }\r\n}","import { Component } from \"react\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport routes from \"../../routes\";\r\nimport { getMovie } from './../../services/api-movies';\r\n\r\n\r\n\r\nimport {\r\n    Cast,\r\n    Reviews,\r\n} from './../../views';\r\n\r\nexport default class MovieDetailsPage extends Component{\r\n\r\n    state = {\r\n        id:0,\r\n        title:'',\r\n        overview:'',\r\n        genres:[],\r\n        poster_path:null,\r\n        vote_average:0,\r\n        release_date:''\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n\r\n        console.log(this.props)\r\n\r\n        const { movieId } = this.props.match.params;\r\n\r\n        getMovie(movieId)\r\n        .then(({id, title, overview, genres, poster_path, vote_average, release_date }) => {\r\n            // console.log(genres);\r\n            this.setState({\r\n                id:id,\r\n                title:title,\r\n                overview:overview,\r\n                genres:genres,\r\n                poster_path:poster_path,\r\n                vote_average:vote_average,\r\n                release_date\r\n            })\r\n        })\r\n    }\r\n\r\n    handleGoBack = () => {\r\n        const { history, location } = this.props\r\n\r\n        // if(location.state && location.state.from)\r\n        //    return history.push(location.state.from);\r\n\r\n        // history.push(routes.home);\r\n\r\n        history.push(location?.state?.from || routes.home);\r\n\r\n    }\r\n\r\n    render(){\r\n        const { title, overview, genres, poster_path, vote_average, release_date } = this.state;\r\n\r\n        const year = release_date.split('-')[0];\r\n\r\n        const { url } = this.props.match;\r\n        const { from } = this.props.location.state;\r\n\r\n        console.log(this.props.location);\r\n\r\n        return (\r\n            <>\r\n            <button type=\"button\" onClick={this.handleGoBack}>Go back</button>\r\n            <div className=\"flextwo\">\r\n                <div>\r\n                    {poster_path != null ?\r\n                        <img src={`//image.tmdb.org/t/p/w220_and_h330_face/${poster_path}`} alt={title} />\r\n                        : <img src={`https://dummyimage.com/220x330/2a2a2a/ffffff&text=No+image`} alt=\"No image\" />\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <h1>{title} {year && `(${year})`}</h1>\r\n                    <p>User Scope: {vote_average * 10}%</p>\r\n\r\n                    <h3>Overview</h3>\r\n                    <p>{overview}</p>\r\n\r\n                    <h4>Genres</h4>\r\n                    <div className=\"genres\">{genres.map(({id, name})=>(\r\n                        <span key={id}>{name} </span>\r\n                    ))}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ borderTop: \"2px solid\", borderBottom: \"2px solid\"}}>\r\n                <h3>Additional information</h3>\r\n                <ul>\r\n                    {/* <li><Link to={`${url}/cast`}>Cast</Link></li>\r\n                    <li><Link to={`${url}/reviews`}>Reviews</Link></li> */}\r\n\r\n                    <li><Link to={{\r\n                        pathname:`${url}/cast`,\r\n                        state:{from:from}\r\n                    }}>Cast</Link></li>\r\n                    <li><Link to={{\r\n                        pathname:`${url}/reviews`,\r\n                        state:{from:from}\r\n                    }}>Reviews</Link></li>\r\n                </ul>\r\n            </div>\r\n            <Route path={routes.movieCast} component={Cast} />\r\n            <Route path={routes.movieReviews} component={Reviews} />\r\n            </>\r\n        )\r\n    }\r\n}","\r\nimport { Component } from 'react';\r\nimport { getTrending } from './../../services/api-movies';\r\n\r\nimport MovieItems from './../../components/MovieItems';\r\n\r\nexport default class HomePage extends Component{\r\n\r\n    state ={\r\n        results:[]\r\n    }\r\n    \r\n    componentDidMount = () =>{\r\n        getTrending({timeWindow:\"day\"}).then(results => {\r\n            // console.log(results);\r\n            this.setState({results})\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { results } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <h1>Trending today</h1>\r\n\r\n                { results.length >= 0 && <MovieItems results={results} />}\r\n                \r\n            </>\r\n        )\r\n    }\r\n}","export default {\r\n    home:'/',\r\n    movies:'/movies',\r\n    movieDetails:'/movies/:movieId',\r\n    movieReviews:'/movies/:movieId/reviews',\r\n    movieCast:\"/movies/:movieId/cast\"\r\n\r\n}","\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from './../../routes';\r\n\r\nexport default function Navigation(){\r\n\r\n    console.log(routes.home);\r\n\r\n    return(\r\n        <>\r\n            <li><NavLink exact to={routes.home} className=\"NavLink\" activeClassName=\"NavLink--active\">Home</NavLink></li>\r\n            <li><NavLink to={routes.movies} className=\"NavLink\" activeClassName=\"NavLink--active\">Movies</NavLink></li>\r\n        </>\r\n    )\r\n}","import Navigation from './../Navigation';\r\n\r\nexport default function AppBar(){\r\n    return(\r\n        <header>\r\n            <ul>\r\n               <Navigation/>\r\n            </ul>\r\n        </header>\r\n    )\r\n}","\r\nexport default function Loader(){\r\n    return(\r\n        <h2>Loading...</h2>\r\n    )\r\n}","import React, { lazy, Suspense } from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport routes from \"./routes\";\r\nimport AppBar from './components/AppBar';\r\nimport Loader from './components/Loader';\r\n\r\nimport { NotFound } from './views';\r\n\r\nconst HomePage = lazy(() => import('./views/HomePage' /* webpackChunkName: home-page\" */))\r\nconst MoviesPage = lazy(() => import('./views/MoviesPage' /* webpackChunkName: \"movies-page\" */))\r\nconst MovieDetailsPage = lazy(() => import('./views/MovieDetailsPage' /* webpackChunkName: \"Movie-details-page\" */))\r\n\r\n\r\nexport default function App(){\r\n    return(\r\n       <>\r\n        <AppBar />\r\n        <Suspense fallback={<Loader/>}>\r\n            <Switch>\r\n                <Route exact path={routes.home} component={HomePage} />\r\n                <Route exact path={routes.movies} component={MoviesPage} />\r\n                <Route path={routes.movieDetails} component={MovieDetailsPage} />\r\n                <Route component={NotFound} />\r\n            </Switch>\r\n        </Suspense>\r\n       </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nimport './base.css';\n\n\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.querySelector('#root'))\n"],"sourceRoot":""}